table.table.table-hover.table-bordered
	thead
		tr
			th status
			th order
			th brand
			//- th P/I
			th price
			th ac / Method
			th acAt
			th md / Method
			th mdAt
			th sa / Method
			th saAt
			th(style="min-width: 100px") note
	tbody
		- let pTot = acTot = mdTot = saTot = 0;
		- let unCheck = checking = checked = 0;
		each item in objects
			if !isNaN(item.price)
				- pTot += item.price;

			-let stsOrderBg = Conf.stsOrderBg[item.status];

			-let payAc, acPrice, payMd, mdPrice, paySa, saPrice;
			-let methodAc, methodMd, methodSa;
			-let bgAcPaid = bgMdPaid = bgSaPaid = "bg-default";
			-let textAcWeek = textMdWeek = textSaWeek = "bg-default";
			if item.payAc
				-payAc = item.payAc;
				-methodAc = payAc.method;
				-acPrice = payAc.price;
				-acTot += payAc.price;

				if payAc.status == 0
					- unCheck += payAc.price;
				else if payAc.status == 1
					- checking += payAc.price;
					- bgAcPaid = "bg-warning";
				else if payAc.status == 2
					- checked += payAc.price;
					- bgAcPaid = "bg-success"

				if payAc.paidAt
					-acTime = moment(payAc.paidAt).format('YYYYMMDD');
					if today <= acTime && acTime < weekday
						- textAcWeek="text-info";
					else if acTime < today && payAc.status == 1
						- textAcWeek="text-danger";
			if item.payMd
				-payMd = item.payMd;
				-methodMd = payMd.method;
				-mdPrice = payMd.price;
				-mdTot += payMd.price;

				if payMd.status == 0
					- unCheck += payMd.price;
				else if payMd.status == 1
					- checking += payMd.price;
					- bgMdPaid = "bg-warning";
				else if payMd.status == 2
					- checked += payMd.price;
					- bgMdPaid = "bg-success"

				if payMd.paidAt
					-mdTime = moment(payMd.paidAt).format('YYYYMMDD');
					if today <= mdTime && mdTime < weekday
						- textMdWeek="text-info";
					else if mdTime < today && payMd.status == 1
						- textMdWeek="text-danger";
			if item.paySa
				-paySa = item.paySa;
				-methodSa = paySa.method;
				-saPrice = paySa.price;
				-saTot += paySa.price;

				if paySa.status == 0
					- unCheck += paySa.price;
				else if paySa.status == 1
					- checking += paySa.price;
					- bgSaPaid = "bg-warning";
				else if paySa.status == 2
					- checked += paySa.price;
					- bgSaPaid = "bg-success"

				if paySa.paidAt
					-saTime = moment(paySa.paidAt).format('YYYYMMDD');
					if today <= saTime && saTime < weekday
						- textSaWeek="text-info";
					else if saTime < today && paySa.status == 1
						- textSaWeek="text-danger";

			tr(class="item-id-"+item._id)
				td(class=stsOrderBg)
					if item.status == 3 && paySa.status ==2
						-a;
						button.btn.btn-warning.change(type="button", , data-url="/vdOrderStatus", data-id=item._id, data-sts=4) Confermare
					else
						span #{Conf.stsOrderVder[item.status]}
				td 
					span #{item.order}
					if item.pi
						-a;
						br
						span [#{item.pi}]
				td #{item.brand}
				//- td #{item.pi}
				td #{item.price}
				td(class=bgAcPaid)
					if acPrice
						-a;
						span #{acPrice} €
					br
					if methodAc || methodAc == 0
						-a;
						span #{Conf.payMethod[methodAc]}
				td(class=textAcWeek)
					if payAc && payAc.paidAt
						-paidAt = payAc.paidAt;
						h5 #{moment(paidAt).format('YYYY/MM/DD')}
				td(class=bgMdPaid)
					if mdPrice
						-a;
						span #{mdPrice} €
					br
					if methodMd || methodMd == 0
						-a;
						span #{Conf.payMethod[methodMd]}
				td(class=textMdWeek)
					if payMd && payMd.paidAt
						-a;
						h5 #{moment(payMd.paidAt).format('YYYY/MM/DD')}
				td(class=bgSaPaid)
					if saPrice
						-a;
						span #{saPrice} €
					br
					if methodSa || methodSa == 0
						-a;
						span #{Conf.payMethod[methodSa]}
				td(class=textSaWeek)
					if paySa && paySa.paidAt
						-a;
						h5 #{moment(paySa.paidAt).format('YYYY/MM/DD')}
				td
					include ./editNote
		tr
			td(colspan="11") .
		tr.bg-light
			td(colspan="4").text-right Total Price: #{pTot.toFixed(2)} €
			td(colspan="2") Total AC: #{acTot.toFixed(2)} €
			td(colspan="2")
				if mdTot && mdTot != 0
					-a;
					span Total MD: #{mdTot} €
			td(colspan="2") Total SA: #{saTot.toFixed(2)} €
			td
		tr
			td
			td(colspan="3") 未付: #{unCheck.toFixed(2)} €
			td(colspan="3") 已签: <span class="text-warning">#{checking.toFixed(2)}</span> €
			td(colspan="3") 已取: <span class="text-success">#{checked.toFixed(2)}</span> €
			td

script(src="/js/order/list.js")
script(src="/js/changeStatus.js")